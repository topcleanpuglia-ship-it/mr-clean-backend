import express from "express";
import cors from "cors";
import Stripe from "stripe";

const app = express();
const stripe = new Stripe(
  "sk_test_51SDqzPR21HE2WXuAaeO9qrzqfO3SxuGdJjWwrRWnqjM0Wol9DYcQKZ6XA0O2PZ36QCnpyP3tQ4fyTZxPQs4WqMGp00YXvk6WaE"
);

app.use(cors());
app.use(express.json());

// TEST endpoint per verificare connessione
app.get("/", (req, res) => {
  res.send("✅ Backend attivo su localhost:3000");
});

// Endpoint per creare sessione checkout Stripe
app.post("/create-checkout-session", async (req, res) => {
  try {
    const { amount } = req.body;

    const session = await stripe.checkout.sessions.create({
      payment_method_types: ["card"],
      mode: "payment",
      line_items: [
        {
          price_data: {
            currency: "eur",
            product_data: {
              name: "Servizio di pulizia",
            },
            unit_amount: amount * 100, // da € a centesimi
          },
          quantity: 1,
        },
      ],
      success_url: "http://localhost:5173/success",
      cancel_url: "http://localhost:5173/cancel",
    });

    res.json({ url: session.url });
  } catch (error) {
    console.error("Errore Stripe:", error);
    res.status(500).json({ error: error.message });
  }
});

// Simulazione prenotazioni (per debug)
const bookings = [];

app.post("/api/bookings", (req, res) => {
  try {
    const booking = req.body;
    bookings.push(booking);
    res.json({ message: "Prenotazione registrata con successo", booking });
  } catch (error) {
    console.error("Errore nella prenotazione:", error);
    res.status(500).json({ error: "Errore interno del server" });
  }
});

app.get("/api/bookings", (req, res) => {
  res.json(bookings);
});

app.listen(3000, () => console.log("✅ Backend attivo su http://localhost:3000"));
;






